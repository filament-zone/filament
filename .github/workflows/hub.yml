name: Hub
on:
  merge_group:
    types: [checks_requested]
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - .github/workflows/hub.yml
      - Cargo.lock
      - Cargo.toml
      - config/**
      - crates/**
      - .rustfmt.toml
      - rust-toolchain
      - test-data/**
  push:
    branches:
      - main
    tags: ["*"]
    paths:
      - .github/workflows/hub.yml
      - Cargo.lock
      - Cargo.toml
      - config/**
      - crates/**
      - .rustfmt.toml
      - rust-toolchain
      - test-data/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_PROFILE_DEV_DEBUG: 1
  CARGO_PROFILE_RELEASE_DEBUG: 1
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10
  SKIP_GUEST_BUILD: 1

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        toolchain: ["1.81"]

    name: Build Hub
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Startup SSH agent for private repo access
        uses: webfactory/ssh-agent@v0.9.0
        with:
            ssh-private-key: |
              ${{ secrets.SSH_DEPLOY_KEY }}
              ${{ secrets.SSH_FORMAT_DEPLOY_KEY }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "23.2"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, rust-src, clippy

      - name: Install mold linker
        uses: rui314/setup-mold@v1

      - name: Install cargo-risczero
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-risczero@1.0.5

      - name: Install risc0-zkvm toolchain # Use the risc0 cargo extension to install the risc0 std library for the current toolchain
        run: make install-risc0-toolchain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache dependencies & tools
        uses: Swatinem/rust-cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          key: ${{ matrix.os }}-${{ matrix.toolchain }}

      - name: Build Rollup
        run: cargo build --release -p filament-hub-rollup

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: filament-hub-rollup
          path: target/release/filament-hub-rollup

  fmt:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        toolchain: [nightly]

    name: Format Hub
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Startup SSH agent for private repo access
        uses: webfactory/ssh-agent@v0.9.0
        with:
            ssh-private-key: |
              ${{ secrets.SSH_DEPLOY_KEY }}
              ${{ secrets.SSH_FORMAT_DEPLOY_KEY }}
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, clippy

      - name: Cache dependencies & tools
        uses: Swatinem/rust-cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          key: ${{ matrix.os }}-${{ matrix.toolchain }}

      - name: Fmt Hub
        run: cargo fmt --all -- --check

  lint:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        toolchain: ["1.81"]

    name: Lint Hub
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Startup SSH agent for private repo access
        uses: webfactory/ssh-agent@v0.9.0
        with:
            ssh-private-key: |
              ${{ secrets.SSH_DEPLOY_KEY }}
              ${{ secrets.SSH_FORMAT_DEPLOY_KEY }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "23.2"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, clippy

      - name: Install mold linker
        uses: rui314/setup-mold@v1

      - name: Install cargo-risczero
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-risczero@1.0.5

      - name: Install risc0-zkvm toolchain # Use the risc0 cargo extension to install the risc0 std library for the current toolchain
        run: make install-risc0-toolchain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install zepter
        uses: taiki-e/install-action@v2
        with:
          tool: zepter

      - name: Cache dependencies & tools
        uses: Swatinem/rust-cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          key: ${{ matrix.os }}-${{ matrix.toolchain }}

      - name: Lint Hub
        run: make lint

  test:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        toolchain: ["1.81"]

    name: Test Hub
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Startup SSH agent for private repo access
        uses: webfactory/ssh-agent@v0.9.0
        with:
            ssh-private-key: |
              ${{ secrets.SSH_DEPLOY_KEY }}
              ${{ secrets.SSH_FORMAT_DEPLOY_KEY }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "23.2"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, rust-src, clippy

      - name: Install mold linker
        uses: rui314/setup-mold@v1

      - name: Install cargo-risczero
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-risczero@1.0.5

      - name: Install risc0-zkvm toolchain # Use the risc0 cargo extension to install the risc0 std library for the current toolchain
        run: make install-risc0-toolchain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache dependencies & tools
        uses: Swatinem/rust-cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          key: ${{ matrix.os }}-${{ matrix.toolchain }}

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Run tests
        run: make test

  wasm:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        toolchain: ["1.81"]

    name: WASM
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Startup SSH agent for private repo access
        uses: webfactory/ssh-agent@v0.9.0
        with:
            ssh-private-key: |
              ${{ secrets.SSH_DEPLOY_KEY }}
              ${{ secrets.SSH_FORMAT_DEPLOY_KEY }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "23.2"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, rust-src, clippy

      - name: Install mold linker
        uses: rui314/setup-mold@v1

      - name: Install wasm-pack
        uses: taiki-e/install-action@v2
        with:
          tool: wasm-pack

      - name: Cache dependencies & tools
        uses: Swatinem/rust-cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          key: ${{ matrix.os }}-${{ matrix.toolchain }}

      - name: Run tests in Chrome
        run: make test-wasm-chrome
      - name: Run tests in Firefox
        run: make test-wasm-firefox

      - name: Build release package
        run: make build-wasm-release

      - name: Pack package
        run: make pack-wasm

      - name: Upload tar
        uses: actions/upload-artifact@v4
        with:
          name: filament-hub-wasm
          path: crates/wasm/pkg/filament-hub-wasm-0.1.0.tgz
