name: CI
on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read
  pull-requests: read

jobs:
  lint-commits:
    strategy:
      matrix:
        os: [ubuntu-latest]

    name: Lint Commits
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: wagoid/commitlint-github-action@v5

  lint-markdown:
    strategy:
      matrix:
        os: [ubuntu-latest]

    name: Lint Markdown
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm install

      - uses: xt0rted/markdownlint-problem-matcher@v2
      - run: npm run markdownlint

  build-hub:
    strategy:
      matrix:
        os: [ubuntu-22.04-16core]
        toolchain: [stable]

    name: Build Hub Rollup
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          version: "23.2"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache dependencies & tools
        uses: Swatinem/rust-cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          key: ${{ matrix.os }}-${{ matrix.toolchain }}

      - name: Install cargo-risc0 # Risc0 v0.17 and higher require a cargo extension to build the guest code
        run: cargo install cargo-risczero

      - name: Install risc0-zkvm toolchain # Use the risc0 cargo extension to install the risc0 std library for the current toolchain
        run: cargo risczero install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Mock Rollup
        run: cd hub && cargo build -p hub-rollup

      - name: Build Celestia Rollup
        run: cd hub && cargo build -p hub-rollup --no-default-features --features celestia_da

  test-hub:
    strategy:
      matrix:
        os: [ubuntu-22.04-16core]
        toolchain: [stable]

    name: Test hub
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          version: "23.2"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache dependencies & tools
        uses: Swatinem/rust-cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          key: ${{ matrix.os }}-${{ matrix.toolchain }}

      - name: Install cargo-risc0 # Risc0 v0.17 and higher require a cargo extension to build the guest code
        run: cargo install cargo-risczero

      - name: Install risc0-zkvm toolchain # Use the risc0 cargo extension to install the risc0 std library for the current toolchain
        run: cargo risczero install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: cd hub && cargo build

      - name: Run tests
        run: cd hub && cargo test --workspace --all-targets

      - name: Run README.md
        run: cd hub && chmod +x rollup-starter.sh && ./rollup-starter.sh

  clippy-hub:
    strategy:
      matrix:
        os: [ubuntu-22.04-16core]
        toolchain: [stable]

    name: Clippy Hub
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, clippy

      - name: Cache dependencies & tools
        uses: Swatinem/rust-cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          key: ${{ matrix.os }}-${{ matrix.toolchain }}

      - name: Run cargo clippy
        run: cd hub && cargo metadata --format-version=1 --no-deps | jq -r '.packages[] | select(.name != "hub-rollup" and .name != "hub-prover") | .name' | xargs -I {} cargo clippy -p {} --no-deps -- -Dwarnings -Dnonstandard-style -Drust-2018-idioms -Dunused -Drust-2021-compatibility

  fmt-hub:
    strategy:
      matrix:
        os: [ubuntu-22.04-16core]
        toolchain: [nightly]

    name: Format Hub
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, clippy

      - name: Cache dependencies & tools
        uses: Swatinem/rust-cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          key: ${{ matrix.os }}-${{ matrix.toolchain }}

      - name: Run cargo fmt
        run: cd hub && cargo fmt --all -- --check
